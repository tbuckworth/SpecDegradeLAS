module Prioritizedarbiter

sys boolean a;
sys boolean b;
sys boolean c;

//guarantee -- guarantee1_1
//	G(a -> X(b U c));
	
gar aImpliesNext_bUntil_c(a,b,c);

gar !a & !b & !c;

//gar alwEv a & !b & !c;




pattern aImpliesNext_bUntil_c(a, b, c) {
  var { S0, S1, S2} state;

  // initial assignments: initial state
  ini state=S0;

  // safety this and next state
  alw (
		(state=S0 & (!a) & next(state=S0)) |
		(state=S0 & (a) & next(state=S1)) |
		
		(state=S1 & ((a & c) | (b & !c)) & next(state=S1)) |
		(state=S1 & (!a & c) & next(state=S0)) |
		(state=S1 & (!b & !c) & next(state=S2)) |
		(state=S2 & next(state=S2))  
	  );

  // equivalence of satisfaction
  alwEv (state=S0);
  alwEv (state=S1);
}




