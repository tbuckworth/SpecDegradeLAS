module Retractionpattern1

env boolean p;
env boolean q;

//spec: -ins='p,q' -g='G (p -> F(q))' -g='G (q -> p)'

guarantee -- guarantee1_1
	pRespondsToS(p,q);

guarantee -- guarantee2_1
	G(q->p);

//BC: (F((p & G(!q))) | F((q & G(!p))))

assumption -- negated_bc1_1
	pRespondsToS(p,q);

assumption -- negated_bc2_1
	pRespondsToS(q,p);

pattern pRespondsToS(s, p) {
  var { S0, S1} state;

  // initial assignments: initial state
  ini state=S0;

  // safety this and next state
  alw ((state=S0 & ((!s) | (s & p)) & next(state=S0)) |
  (state=S0 & (s & !p) & next(state=S1)) |
  (state=S1 & (p) & next(state=S0)) |
  (state=S1 & (!p) & next(state=S1)));

  // equivalence of satisfaction
  alwEv (state=S0);
}